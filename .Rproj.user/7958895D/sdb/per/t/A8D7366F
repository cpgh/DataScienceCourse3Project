{
    "contents" : "\n## This script is submitted for Coursera Data Science Course 3, Getting and Cleaning Data\n## The script performs the following activities:\n## Extracts data from the .zip source file into a directory in the working directory\n## Creates separate df's for each relevant table in order to more properly compartmenalize the code\n## Separatesthe the process into training and test where applicable and then performs following steps:\n## Step 1 - Normalizes the the two data sets as follows:\n##     1.a  Assigns names to the columns\n##     1.b  Combines activity IDs (the \"y_\" files) with each data df (the \"X_\" files)\n##     1.c  Creates a variable with Activity Names based on the  AcivityID code via merge\n##     1.d  Merges activity names into the data df's\n##     1.e  Merges subject id from one data file with the measured variaables \n##     1.f  Removes columns that are not either mean or std values\n##     1.g  Merges the training and test data sets\n##     1.h  Aggregates the values by activity and subject\n##     1.i  Generates a tidy data set by normalizing the variable names\n\n\n\n\nlibrary(plyr)\nlibrary(dplyr)\nlibrary(reshape)\nlibrary(tidyr)\nlibrary(gdata)\n\nrequire(plyr)\nrequire(dplyr)\nrequire(reshape)\nrequire(tidyr)\nrequire(gdata)\n\n#rm(list=ls())\n#getwd()\n## PROVIDE THE WORKING DIRECTORY PATH for the SOURCE ZIP FILE INSIDE THE DOUBLE QUOTES \n## and UNCOMMENT THE CODE BEFORE RUNNING THIS CODE\n#  setwd(\"<<INPUT WD HERE>>\")\n\n\n## Unzip Files from local drive\nunzip(\"getdata-projectfiles-UCI HAR Dataset.zip\")\n\n\n##  read data into R\n\n\nheaderNAMES <- read.table(\"UCI HAR Dataset/features.txt\", stringsAsFactors=F)  # table with header names\n\nactivityNAMES <- read.table(\"UCI HAR Dataset/activity_labels.txt\")  # table with activity names\n\ndataFileTRAIN <- read.table(\"UCI HAR Dataset/train/X_train.txt\")  # table with training data\n\n\ndataFileTEST <- read.table(\"UCI HAR Dataset/test/X_test.txt\")     # table with test data\n\ndataFileTRAINactivities <- read.table(\"UCI HAR Dataset/train/y_train.txt\")     # table with training activity id's\n\ndataFileTESTactivities <- read.table(\"UCI HAR Dataset/test/y_test.txt\")     # table with test activity id's\n\ndataFileTRAINsubjects <- read.table(\"UCI HAR Dataset/train/subject_train.txt\")     # table with training subject codes\nnames(dataFileTRAINsubjects)[1] <- \"Subject\"  # renanme col v1 with user friendly name for subjects.\n\ndataFileTESTsubjects <- read.table(\"UCI HAR Dataset/test/subject_test.txt\")     # table with test subject codes\nnames(dataFileTESTsubjects)[1] <- \"Subject\"  # renanme col v1 with user friendly name for subjects.\n\n\n##  create vector, properly ordered for use as  col names\nlistNAME <- as.character(headerNAMES[[2]])\n#str(listNAME)\n\n##  name columnns in both df's\ncolnames(dataFileTRAIN) <- listNAME\ncolnames(dataFileTEST) <- listNAME\n\n\n\n## combine subject ID's with data in both df's and rename ActivityID variable\ndataFileTEST <- cbind(dataFileTESTactivities, dataFileTEST)  # combine activity ID with data\nnames(dataFileTEST)[1] <- \"ActivityID\"  # renanme activity ID with user friendly name\n\n\ndataFileTRAIN <- cbind(dataFileTRAINactivities, dataFileTRAIN)  # combine activity ID with data\nnames(dataFileTRAIN)[1] <- \"ActivityID\"  # renanme activity ID with user friendly name\n\n\n\n## merge activity names with data df's\n\ndataFileTEST <- data.frame(dataFileTEST, \"activityName\"=activityNAMES[match(dataFileTEST$ActivityID, activityNAMES$V1), 2], check.names=FALSE)\n\ndataFileTRAIN <- data.frame(dataFileTRAIN, \"activityName\"=activityNAMES[match(dataFileTRAIN$ActivityID, activityNAMES$V1), 2], check.names=FALSE)\n\n\n\n\n#merge subject id with data df and subset only columns that contain stand dev or mean values\n\ndataFileTEST.obs <- cbind(dataFileTESTsubjects, dataFileTEST)\n\ndataFileTEST.obs <- dataFileTEST.obs[, c(\"Subject\", \"ActivityID\", 'activityName', \n                             grep(\"mean\", names(dataFileTEST.obs), value=T, ignore.case=T),\n                             grep(\"std\", names(dataFileTEST.obs), value=T, ignore.case=T))]\n\n\n\n\ndataFileTRAIN.obs <- cbind(dataFileTRAINsubjects, dataFileTRAIN)\n\ndataFileTRAIN.obs <- dataFileTRAIN.obs[, c(\"Subject\", \"ActivityID\", 'activityName', \n                              grep(\"mean\", names(dataFileTRAIN.obs), value=T, ignore.case=T),\n                              grep(\"std\", names(dataFileTRAIN.obs), value=T, ignore.case=T))]\n\n\n\n# Merge Training and Test final data sets\n\ndataFileCOMBINED <- rbind(dataFileTEST.obs, dataFileTRAIN.obs)\n\n\n# Remove Activity ID...not needed in final result\ndataFileCOMBINED$ActivityID <- NULL\n\n\n# Convert subjects to factors...required to perform aggregation\ndataFileCOMBINED$Subject <- as.factor(dataFileCOMBINED$Subject)\n\n\n\n## Calculate the MEAN values for all measured variables in aggregate by activity and subject\n\nlen.datafile <- length(dataFileCOMBINED)\ndataFileCOMBINED.MEAN.prelim <- aggregate(dataFileCOMBINED[ , 3:len.datafile], \n                     by = dataFileCOMBINED[c(\"Subject\", \"activityName\")], FUN=mean)\n\n\n\n## Perform data tidy operation, renaming variables\n## Elimnate \"()\", replace \"(\" and \")\" with spaces,\n##  replace \"-\" and \",\" with spaces,\n\ndataFileCOMBINED.MEAN <- dataFileCOMBINED.MEAN.prelim\n\n\n## Perform data tidy operation, renaming variables as per proven practices\n## NOTE:  Some code sections has to be performed twice for the code to cleanse the data....don't know why\n\n\nnames(dataFileCOMBINED.MEAN) <- sub(\"\\\\-\",\" \",names(dataFileCOMBINED.MEAN),)  # hypen replace with space\nnames(dataFileCOMBINED.MEAN) <- sub(\"\\\\-\",\" \",names(dataFileCOMBINED.MEAN),)  # hypen replace with space\nnames(dataFileCOMBINED.MEAN) <- sub(\"\\\\,\",\" \",names(dataFileCOMBINED.MEAN),)  # comma replace with space\nnames(dataFileCOMBINED.MEAN) <- sub(\"\\\\()\",\"\",names(dataFileCOMBINED.MEAN),)  # double paren replace with blank\nnames(dataFileCOMBINED.MEAN) <- sub(\"\\\\(\",\" \",names(dataFileCOMBINED.MEAN),)  # open paren replace with blank\nnames(dataFileCOMBINED.MEAN) <- sub(\"\\\\)\",\" \",names(dataFileCOMBINED.MEAN),)  # close paren replace with blank\nnames(dataFileCOMBINED.MEAN) <- sub(\"\\\\)\",\" \",names(dataFileCOMBINED.MEAN),)  # close paren replace with blank\nnames(dataFileCOMBINED.MEAN) <- sub(\"^f\",\"f.\",names(dataFileCOMBINED.MEAN),)  # f leading replace with f.\nnames(dataFileCOMBINED.MEAN) <- sub(\"^t\",\"t.\",names(dataFileCOMBINED.MEAN),)  # t leading replace with t.\n\n# Trim trailing and leading spaces\nnames(dataFileCOMBINED.MEAN) <- trim(names(dataFileCOMBINED.MEAN))\n\n#Final Output\ndataFileCOMBINED.MEAN\n\n\n",
    "created" : 1421831968176.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2505754142",
    "id" : "A8D7366F",
    "lastKnownWriteTime" : 1421833612,
    "path" : "C:/github/general/DataScienceCourse3Project/AcquireData.R",
    "project_path" : "AcquireData.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}